---

- hosts: all
  sudo: True
  tasks:
    setup:
      filter: '*'

- hosts: all
  sudo: True
  vars:
    base: /home/vagrant/local
    build: /home/vagrant/scratch
    local_env:
      PATH: "/home/vagrant/local/bin:{{ansible_env.PATH}}"
      CFLAGS: "-I{{base}}/include"
      CPPFLAGS: "-I{{base}}/include"
      LDFLAGS: "-L{{base}}/lib"
      LD_LIBRARY_PATH: "{{base}}/lib"
      PKG_CONFIG_PATH: "{{ base }}/lib/pkgconfig"

  tasks:

    ## Directories
    - name: Make directories
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      with_items:
        - "{{ base }}"
        - "{{ build }}"
        - "{{ base }}/man/man1"
        - "{{ base }}/lib"
        - "{{ base }}/include"

    ## C and its friends
    - name: Install required packages
      yum:
        name: autoconf,automake,gcc,gcc-c++,git,libtool,libselinux-python,xz

    ## cmake
    - name: Get cmake
      get_url:
        dest: "{{ build }}/cmake-3.3.1.tar.gz"
        url: http://www.cmake.org/files/v3.3/cmake-3.3.1.tar.gz
    - name: Unpack cmake
      command: tar -zxf {{ build }}/cmake-3.3.1.tar.gz chdir={{ build }} creates={{ build }}/cmake-3.3.1
      environment: local_env
    - name: Configure cmake
      command: ./configure --prefix={{ base }} chdir={{ build }}/cmake-3.3.1 creates={{ build }}/cmake-3.3.1/CPackConfig.cmake
      environment: local_env
    - name: make cmake
      command: make chdir={{ build }}/cmake-3.3.1 creates={{ build }}/cmake-3.3.1/bin/cmake
      environment: local_env
    - name: Install cmake
      command: make install chdir={{ build }}/cmake-3.3.1 creates={{ base }}/bin/cmake
      environment: local_env

    - name: Get libjpeg
      get_url:
        dest: "{{ build }}/jpegsrc.v6b.tar.gz"
        url: http://sourceforge.net/projects/libjpeg/files/libjpeg/6b/jpegsrc.v6b.tar.gz/download
    - name: Unpack libjpeg
      command: tar -zxf {{ build }}/jpegsrc.v6b.tar.gz chdir={{ build }} creates={{ build }}/jpeg-6b
      environment: local_env
    - name: Configure libjpeg
      command: ./configure --prefix={{ base }} --enable-shared chdir={{ build }}/jpeg-6b creates={{ build }}/jpeg-6b/config.status
      environment: local_env
    - name: Make libjpeg
      command: make chdir={{ build }}/jpeg-6b creates={{build}}/jpeg-6b/cjpeg
      environment: local_env
    - name: Install libjpeg
      command: make install chdir={{ build }}/jpeg-6b creates={{base}}/bin/cjpeg
      environment: local_env
    - name: Install pkg-config file
      template:
        src: "./templates/libjpeg.pc.j2"
        dest: "{{ base }}/lib/pkgconfig/libjpeg.pc"

    - name: Get openjpeg
      get_url:
        dest: "{{ build }}/openjpeg-version.2.1.tar.gz"
        url: https://github.com/uclouvain/openjpeg/archive/version.2.1.tar.gz
    - name: Unpack openjpeg
      command: tar -zxf {{ build }}/openjpeg-version.2.1.tar.gz chdir={{ build }} creates={{ build }}/openjpeg-version.2.1
      environment: local_env
    - name: Configure openjpeg
      command: cmake . -DCMAKE_INSTALL_PREFIX={{ base }} chdir={{ build }}/openjpeg-version.2.1 creates={{ build }}/openjpeg-version.2.1/Makefile
      environment: local_env
    - name: Make openjpeg
      command: make chdir={{ build }}/openjpeg-version.2.1 creates={{build}}/openjpeg-version.2.1/bin/libopenjp2.so
      environment: local_env
    - name: Install openjpeg
      shell: env DESTDIR={{base}} make install chdir={{ build }}/openjpeg-version.2.1 creates={{base}}/lib/libopenjp2.so
      environment: local_env

    - name: Get libtiff
      get_url:
        dest: "{{ build }}/tiff-4.0.4.tar.gz"
        url: ftp://ftp.remotesensing.org/pub/libtiff/tiff-4.0.4.tar.gz
    - name: Unpack libtiff
      command: tar -zxf {{ build }}/tiff-4.0.4.tar.gz chdir={{ build }} creates={{ build }}/tiff-4.0.4
      environment: local_env
    - name: Configure libtiff
      command: ./configure --prefix={{ base }} chdir={{ build }}/tiff-4.0.4 creates={{ build }}/tiff-4.0.4/config.status
      environment: local_env
    - name: Make libtiff
      command: make chdir={{ build }}/tiff-4.0.4 creates={{ build }}/tiff-4.0.4/libtiff/libtiff.la
      environment: local_env
    - name: Install libtiff
      shell: make install chdir={{ build }}/tiff-4.0.4 creates={{ base }}/lib/libtiff.la
      environment: local_env

    ## zlib - http://zlib.net/zlib-1.2.8.tar.gz
    - name: Get zlib
      get_url:
        dest: "{{ build }}/zlib-1.2.8.tar.gz"
        url: "http://zlib.net/zlib-1.2.8.tar.gz"
    - name: Unpack zlib
      command: tar -zxf {{ build }}/zlib-1.2.8.tar.gz chdir={{ build }} creates={{ build }}/zlib-1.2.8
      environment: local_env
    - name: Configure zlib
      command: ./configure --prefix={{ base }} chdir={{ build }}/zlib-1.2.8 creates={{ build }}/zlib-1.2.8/zconf.h
      environment: local_env
    - name: Make zlib
      command: make chdir={{ build }}/zlib-1.2.8 creates={{ build }}/zlib-1.2.8/libz.a
      environment: local_env
    - name: Install zlib
      shell: make install chdir={{ build }}/zlib-1.2.8 creates={{ base }}/lib/libz.a
      environment: local_env

    ## ffi - ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz
    - name: Get libffi
      get_url:
        dest: "{{ build }}/libffi-3.2.1.tar.gz"
        url: ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz
    - name: Unpack libffi
      command: tar -zxf {{ build }}/libffi-3.2.1.tar.gz chdir={{ build }} creates={{ build }}/libffi-3.2.1
      environment: local_env
    - name: Configure libffi
      command: ./configure --prefix={{ base }} chdir={{ build }}/libffi-3.2.1 creates={{ build }}/libffi-3.2.1/Makefile
      environment: local_env
    - name: Make libffi
      command: make chdir={{ build }}/libffi-3.2.1 creates={{build}}/libffi-3.2.1/i686-pc-linux-gnu/libffi.la
      environment: local_env
    - name: Install libffi
      shell: make install chdir={{ build }}/libffi-3.2.1 creates={{base}}/lib/libffi.a
      environment: local_env

    ## gettext
    - name: Get gettext
      get_url:
        dest: "{{ build }}/gettext-0.19.tar.gz"
        url: http://ftp.gnu.org/pub/gnu/gettext/gettext-0.19.tar.gz
    - name: Unpack gettext
      command: tar -zxf {{ build }}/gettext-0.19.tar.gz chdir={{ build }} creates={{ build }}/gettext-0.19
      environment: local_env
    - name: Configure gettext
      command: ./configure --prefix={{ base }} chdir={{ build }}/gettext-0.19 creates={{ build }}/gettext-0.19/Makefile
      environment: local_env
    - name: Make gettext
      command: make chdir={{ build }}/gettext-0.19 creates={{ build }}/gettext-0.19/gettext-tools/libgettextpo/libgettextpo.la
      environment: local_env
    - name: Install gettext
      shell: make install chdir={{ build }}/gettext-0.19 creates={{base}}/lib/libgettextpo.a
      environment: local_env

    ## glib - ftp://ftp.gnome.org/pub/gnome/sources/glib/2.44/glib-2.44.1.tar.xz
    - name: Get glib
      get_url:
        dest: "{{ build }}/glib-2.44.1.tar.xz"
        url: ftp://ftp.gnome.org/pub/gnome/sources/glib/2.44/glib-2.44.1.tar.xz
    - name: Unpack glib
      shell: "xz -d -c {{ build }}/glib-2.44.1.tar.xz | tar xf - chdir={{build}} creates={{ build }}/glib-2.44.1"
      environment: local_env
    - name: Configure glib
      command: ./configure --prefix={{ base }} chdir={{ build }}/glib-2.44.1 creates={{ build }}/glib-2.44.1/Makefile
      environment: local_env
    - name: Make glib
      command: make chdir={{ build }}/glib-2.44.1 creates={{ build }}/glib-2.44.1/glib/libglib-2.0.la
      environment: local_env
    - name: Install glib
      shell: make install chdir={{ build }}/glib-2.44.1 creates={{base}}/lib/libglib-2.0.la
      environment: local_env


    ## libpng - http://sourceforge.net/projects/libpng/files/libpng16/1.6.18/libpng-1.6.18.tar.gz/download
    - name: Get libpng
      get_url:
        dest: "{{ build }}/libpng-1.6.18.tar.gz"
        url: http://sourceforge.net/projects/libpng/files/libpng16/1.6.18/libpng-1.6.18.tar.gz/download
    - name: Unpack libpng
      command: tar -zxf {{ build }}/libpng-1.6.18.tar.gz chdir={{ build }} creates={{ build }}/libpng-1.6.18
      environment: local_env
    - name: Configure libpng
      command: ./configure --prefix={{ base }} chdir={{ build }}/libpng-1.6.18 creates={{ build }}/libpng-1.6.18/Makefile
      environment: local_env
    - name: Make libpng
      command: make chdir={{ build }}/libpng-1.6.18 creates={{ build }}/libpng-1.6.18/.libs/libpng16.a
      environment: local_env
    - name: Install libpng
      shell: make install chdir={{ build }}/libpng-1.6.18 creates={{base}}/lib/libpng16.a
      environment: local_env


    ## pixman - http://cairographics.org/releases/pixman-0.32.6.tar.gz
    - name: Get pixman
      get_url:
        dest: "{{ build }}/pixman-0.32.6.tar.gz"
        url: http://cairographics.org/releases/pixman-0.32.6.tar.gz
    - name: Unpack pixman
      command: tar -zxf {{ build }}/pixman-0.32.6.tar.gz chdir={{ build }} creates={{ build }}/pixman-0.32.6
      environment: local_env
    - name: Configure pixman
      command: ./configure --prefix={{ base }} chdir={{ build }}/pixman-0.32.6 creates={{ build }}/pixman-0.32.6/Makefile
      environment: local_env
    - name: Make pixman
      command: make chdir={{ build }}/pixman-0.32.6 creates={{ build }}/pixman-0.32.6/pixman/.libs/libpixman-1.a
      environment: local_env
    - name: Install pixman
      shell: make install chdir={{ build }}/pixman-0.32.6 creates={{base}}/lib/libpixman-1.a
      environment: local_env


    ## cairo - http://cairographics.org/releases/cairo-1.14.2.tar.xz
    - name: Get cairo
      get_url:
        dest: "{{ build }}/cairo-1.14.2.tar.xz"
        url: http://cairographics.org/releases/cairo-1.14.2.tar.xz
    - name: Unpack cairo
      shell: "xz -d -c {{ build }}/cairo-1.14.2.tar.xz | tar xf - chdir={{build}} creates={{ build }}/cairo-1.14.2"
      environment: local_env
    - name: Configure cairo
      command: ./configure --prefix={{ base }} chdir={{ build }}/cairo-1.14.2 creates={{ build }}/cairo-1.14.2/Makefile
      environment: local_env
    - name: Make cairo
      command: make chdir={{ build }}/cairo-1.14.2 creates={{ build }}/cairo-1.14.2/src/.libs/libcairo.la
      environment: local_env
    - name: Install cairo
      shell: make install chdir={{ build }}/cairo-1.14.2 creates={{base}}/lib/libcairo.la
      environment: local_env


    ## gdk-pixbuf - ftp://ftp.gnome.org/pub/gnome/sources/gdk-pixbuf/2.31/gdk-pixbuf-2.31.6.tar.xz
    - name: Get gdk-pixbuf
      get_url:
        dest: "{{ build }}/gdk-pixbuf-2.31.6.tar.xz"
        url: ftp://ftp.gnome.org/pub/gnome/sources/gdk-pixbuf/2.31/gdk-pixbuf-2.31.6.tar.xz
    - name: Unpack gdk-pixbuf
      shell: "xz -d -c {{ build }}/gdk-pixbuf-2.31.6.tar.xz | tar xf - chdir={{build}} creates={{ build }}/gdk-pixbuf-2.31.6"
      environment: local_env
    - name: Configure gdk-pixbuf
      command: ./configure --prefix={{ base }} chdir={{ build }}/gdk-pixbuf-2.31.6 creates={{ build }}/gdk-pixbuf-2.31.6/Makefile
      environment: local_env
    - name: Make gdk-pixbuf
      command: make chdir={{ build }}/gdk-pixbuf-2.31.6 creates={{ build }}/gdk-pixbuf-2.31.6/gdk-pixbuf/libgdk_pixbuf-2.0.la
      environment: local_env
    - name: Install gdk-pixbuf
      shell: make install chdir={{ build }}/gdk-pixbuf-2.31.6 creates={{base}}/lib/libgdk_pixbuf-2.0.la
      environment: local_env


    ## libxml2 - ftp://xmlsoft.org/libxml2/libxml2-2.9.2.tar.gz
    - name: Get libxml2
      get_url:
        dest: "{{ build }}/libxml2-2.9.2.tar.gz"
        url: ftp://xmlsoft.org/libxml2/libxml2-2.9.2.tar.gz
    - name: Unpack libxml2
      command: tar -zxf {{ build }}/libxml2-2.9.2.tar.gz chdir={{ build }} creates={{ build }}/libxml2-2.9.2
      environment: local_env
    - name: Configure libxml2
      command: ./configure --prefix={{ base }} chdir={{ build }}/libxml2-2.9.2 creates={{ build }}/libxml2-2.9.2/Makefile
      environment: local_env
    - name: Make libxml2
      command: make chdir={{ build }}/libxml2-2.9.2 creates={{ build }}/libxml2-2.9.2/libxml2.la
      environment: local_env
    - name: Install libxml2
      shell: make install chdir={{ build }}/libxml2-2.9.2 creates={{base}}/lib/libxml2.la
      environment: local_env


    ## Openslide
    - name: Get openslide
      git:
        dest: "{{ build }}/openslide"
        repo: "https://github.com/openslide/openslide.git"
      environment: local_env
    - name: Configure openslide
      command: libtoolize chdir={{ build }}/openslide creates={{ build }}/openslide/m4/libtool.m4
      environment: local_env
    - name: Configure openslide
      command: autoreconf -i chdir={{ build }}/openslide creates={{ build }}/openslide/configure
      environment: local_env
    - name: Configure openslide
      command: ./configure --prefix={{ base }} chdir={{ build }}/openslide creates={{ build }}/openslide/config.status
      environment: local_env
